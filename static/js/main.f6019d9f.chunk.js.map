{"version":3,"sources":["components/custom-button/custom-button.component.js","components/main-menu-buttons/main-menu-buttons.component.jsx","pages/main-page/main-page.component.jsx","firebase/firebase.utils.js","data/static/device.data.js","firebase/firebase.functions.js","pages/sign-in-page/sign-in-page.component.jsx","pages/link-page/link-page.component.jsx","components/device-list-item/device-list-item.component.jsx","components/form-input/form-input.component.jsx","components/device-details/device-details.component.jsx","pages/info-page/info-page.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["CustomButton","children","otherProps","isGoogleSignIn","className","MainMenuButtons","to","MainPage","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","device","callback","a","deviceDetect","dev","geoUpdate","upd","geolocation","ua","getUA","window","navigator","getBattery","battery","isCharging","charging","timeUntilCharged","chargingTime","batteryLevel","level","timeUntilEmpty","dischargingTime","bluetooth","getAvailability","getCurrentPosition","Uuid","getUuid","rcc","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","addDeviceToUser","currentUser","userDeviceRef","doc","get","deviceSnapshot","email","ownerId","uid","firstAccessedAt","Date","lastAccessedAt","linkProperties","deviceInfo","exists","set","internalLink","linkAddress","console","log","message","update","updateDeviceLinkAddress","deviceId","updateDeviceDisplayName","getDeviceLink","changeHandler","onSnapshot","includeMetadataChanges","data","dat","id","ref","getUserDeviceList","deviceListRef","collection","where","snapShot","deviceList","empty","docs","forEach","push","change","createUserProfileDocument","userAuth","additionalData","userRef","displayName","phoneNumber","createdAt","signedAgreements","onboardedComplete","SignInPage","handleYes","then","val","user","props","history","handleNo","onClick","this","React","Component","withRouter","LinkPage","getLinkFromFireStore","getChangeFromFireStore","deviceData","setState","componentDidMount","state","url","src","title","width","height","allowFullScreen","allow","frameBorder","DeviceListItem","clickHandler","mainDisplayText","FormInput","handleChange","label","value","onChange","DeviceDetails","event","target","name","deviceInfoChange","handleSubmit","preventDefault","submitHandler","vendor","os","osVersion","model","onSubmit","type","InfoPage","devices","selectedDevice","onListChange","newList","onItemSelected","deviceDetails","handleInfoChange","devdeets","map","App","unsubscribeFromAuth","onAuthStateChanged","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6019d9f.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './custom-button.styles.scss';\n\nconst CustomButton = ({children, isGoogleSignIn, ...otherProps}) => (\n  <button className={`${children} custom-button`} {...otherProps}>\n    {children}\n  </button>\n);\n\nexport default CustomButton;\n","import React from 'react'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport './main-menu-buttons.styles.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function MainMenuButtons() {\r\n    return (\r\n        <div className='main-menu-buttons'>\r\n            <Link to='/'>\r\n                <CustomButton>Welcome</CustomButton>\r\n            </Link>\r\n            <Link to='link'>\r\n                <CustomButton>Showcase</CustomButton>\r\n            </Link>\r\n            <Link to='signin'>\r\n                <CustomButton>Sign-In</CustomButton>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport MainMenuButtons from '../../components/main-menu-buttons/main-menu-buttons.component'\r\nimport './main-page.styles.css'\r\n\r\nexport default function MainPage() {\r\n    return (\r\n        <div className='main-page'>\r\n            <span className='header'>SMB | BMS</span>\r\n            <MainMenuButtons />\r\n        </div>\r\n    )\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyA8CE6cmO3e84VpfChKyM44KDe28bn5OMk\",\r\n    authDomain: \"parangelmata.firebaseapp.com\",\r\n    databaseURL: \"https://parangelmata.firebaseio.com\",\r\n    projectId: \"parangelmata\",\r\n    storageBucket: \"parangelmata.appspot.com\",\r\n    messagingSenderId: \"824823048409\",\r\n    appId: \"1:824823048409:web:3e241472d3babc2c3576c8\",\r\n    measurementId: \"G-09Q8GHTRFZ\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport default firebase;","import rcc, { deviceDetect, getUA} from 'react-device-detect'\r\n\r\nimport getUuid from 'uuid-by-string'\r\n\r\nconst device = async (callback) => {\r\n\r\n\r\n    var dev = await deviceDetect();\r\n\r\n    const geoUpdate = (upd) => {\r\n        dev.geolocation = upd;\r\n    }\r\n    \r\n    var ua = getUA;\r\n    const battery = await window.navigator.getBattery();\r\n    dev.battery = {\r\n        isCharging: battery?.charging,\r\n        timeUntilCharged: battery?.chargingTime,\r\n        batteryLevel: battery?.level,\r\n        timeUntilEmpty: battery?.dischargingTime,\r\n    }\r\n    dev.bluetooth = await window.navigator.bluetooth.getAvailability();\r\n    await window.navigator.geolocation.getCurrentPosition(geoUpdate);\r\n    dev.Uuid = getUuid(ua);\r\n    return {...dev,...rcc};\r\n}\r\n\r\n\r\n\r\nexport default device;","import firebase, {auth, firestore} from './firebase.utils'\r\nimport device from '../data/static/device.data'\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport const addDeviceToUser = async () => {\r\n\r\n    const dev = await device();\r\n    const currentUser = auth.currentUser;\r\n    if(!currentUser) return;\r\n    if(dev==null || dev.ua == null) return;\r\n    \r\n    const userDeviceRef = firestore.doc(`smb-devices/${dev.Uuid}`);\r\n    const deviceSnapshot = await userDeviceRef.get();\r\n\r\n    const {email} = currentUser;\r\n    const ownerId = currentUser.uid;\r\n    const firstAccessedAt = new Date();\r\n    const lastAccessedAt = new Date(); \r\n    const internalLink = false;\r\n    const linkAddress = 'https://www.parangelmata.com/plans-pricing';\r\n    const linkProperties = {};\r\n    const deviceInfo = dev;\r\n\r\n    if(!deviceSnapshot.exists)\r\n    {\r\n        try {\r\n            await userDeviceRef.set({\r\n                email,\r\n                ownerId,\r\n                firstAccessedAt,\r\n                internalLink,\r\n                linkAddress,\r\n                linkProperties,\r\n                deviceInfo\r\n            });\r\n        } catch (error) {\r\n            console.log('ERROR CREATING DEVICE', error.message);\r\n        } \r\n    } else {\r\n        try {\r\n            await userDeviceRef.update({\r\n                email,\r\n                ownerId,\r\n                lastAccessedAt,\r\n                deviceInfo\r\n            });\r\n        } catch (error) {\r\n            console.log('ERROR UPDATING DEVICE', error.message);\r\n        } \r\n    }\r\n    return userDeviceRef; \r\n}\r\n\r\nexport const updateDeviceLinkAddress = async (deviceId, linkAddress) => {\r\n    if(!deviceId) return;\r\n    const userDeviceRef = firestore.doc(`smb-devices/${deviceId}`);\r\n    const deviceSnapshot = await userDeviceRef.get();\r\n\r\n    if(deviceSnapshot.exists){\r\n        userDeviceRef.update({\r\n            'linkAddress': linkAddress \r\n        });\r\n    }\r\n}\r\n\r\nexport const updateDeviceDisplayName = async (deviceId, linkAddress) => {\r\n    if(!deviceId) return;\r\n    const userDeviceRef = firestore.doc(`smb-devices/${deviceId}`);\r\n    const deviceSnapshot = await userDeviceRef.get();\r\n\r\n    if(deviceSnapshot.exists){\r\n        userDeviceRef.update({\r\n            'displayName': linkAddress \r\n        });\r\n    }\r\n}\r\n\r\nexport const getDeviceLink = async (changeHandler, deviceId) =>{\r\n    \r\n    const dev = await device();\r\n    if(!dev.Uuid) return;\r\n    if(deviceId){\r\n        dev.Uuid=deviceId\r\n    };\r\n\r\n    const userDeviceRef = firestore.doc(`smb-devices/${dev.Uuid}`);\r\n\r\n    const deviceSnapshot = await userDeviceRef.get();\r\n\r\n    if(deviceSnapshot.exists){\r\n        if(changeHandler){\r\n            userDeviceRef.onSnapshot({includeMetadataChanges: true},changeHandler)\r\n        }\r\n        const dat = await deviceSnapshot.data();\r\n        return {\r\n            id: dev.Uuid,\r\n            data: dat,\r\n            ref: userDeviceRef}\r\n    } else\r\n    return {\r\n        data: {\r\n        id: 0,\r\n        linkAddress: 'https://thejeanlouw.github.io/super-media-bros',\r\n        linkProperties: {}\r\n        }\r\n    };\r\n}\r\n\r\nexport const getUserDeviceList = async (changeHandler) => {\r\n    const currentUser = auth.currentUser;\r\n    const myAuth = auth;\r\n    if(!currentUser) return null;\r\n    const deviceListRef = firestore.collection('smb-devices').where('ownerId','==', currentUser.uid);\r\n    const snapShot = await deviceListRef.get();\r\n    const deviceList = [];\r\n    if(!snapShot.empty)\r\n    {\r\n        snapShot.docs.forEach((doc)=>{\r\n            deviceList.push({id:doc.id,uid:doc.uid,...doc.data()});\r\n        });\r\n        if(changeHandler)\r\n        {\r\n            deviceListRef.onSnapshot((change)=>{\r\n                const changeList = [];\r\n                change.docs.forEach((doc)=>{\r\n                    deviceList.push({id:doc.id,uid:doc.uid,...doc.data()});\r\n                });\r\n                changeHandler(changeList);\r\n            })\r\n        }\r\n    }\r\n    return deviceList;\r\n}\r\n\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if(!userAuth) return;                                           \r\n    const userRef = firestore.doc(`smb-users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get();\r\n    \r\n    if(!snapShot.exists){\r\n        const { displayName, email, phoneNumber} = userAuth;\r\n        const createdAt= new Date();\r\n        const signedAgreements = false;\r\n        const onboardedComplete = false;\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                signedAgreements,\r\n                onboardedComplete,\r\n                ...additionalData\r\n            });\r\n        } catch (error) {\r\n            console.log('ERROR CREATING USER', error.message);\r\n        }\r\n    }\r\n\r\n    await addDeviceToUser();\r\n    return userRef;\r\n\r\n}","import React from 'react'\r\nimport CustomButton from '../../components/custom-button/custom-button.component'\r\nimport './sign-in-page.styles.scss'\r\nimport {signInWithGoogle} from '../../firebase/firebase.functions'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass SignInPage extends React.Component {\r\n\r\n    handleYes = async () =>{\r\n        signInWithGoogle().then((val)=>{\r\n            if(val.user){\r\n                this.props.history.push('/info');\r\n            } else this.props.history.push('/link')})\r\n        \r\n    }\r\n\r\n    handleNo = () => {\r\n        this.props.history.push('/link')\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <div className='sign-in-page'>\r\n            <span className='main-text'>IS THIS THE MANAGING DEVICE?</span>\r\n            <div className='yes-or-no-buttons'>\r\n                <CustomButton onClick={this.handleYes}>Yes</CustomButton>\r\n                <CustomButton onClick={this.handleNo}>No</CustomButton>\r\n            </div>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default withRouter(SignInPage);","import React from 'react'\r\nimport {getDeviceLink} from '../../firebase/firebase.functions'\r\nimport './link-page.styles.scss'\r\n\r\nexport default class LinkPage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            device: null\r\n        }\r\n    }\r\n\r\n    getLinkFromFireStore = async () =>\r\n    {\r\n        const deviceData = await getDeviceLink(this.getChangeFromFireStore);\r\n        this.setState({device: deviceData});\r\n    }\r\n\r\n    getChangeFromFireStore = async (change) =>\r\n    {\r\n        this.setState({device: {\r\n            data: change.data(),\r\n            id: change.id}});\r\n    }\r\n\r\n    componentDidMount= async () =>{\r\n        this.getLinkFromFireStore();\r\n    }\r\n\r\n    render(){\r\n        const {device} = this.state;\r\n        let linkAddress = '';\r\n        if((device!=null) && (device.data!=null) && (device.data.linkAddress!=null)) {\r\n            linkAddress = device.data.linkAddress;\r\n            console.log(\"link address: \", linkAddress, `${linkAddress}`)\r\n            return (\r\n                <div className='iframe'>\r\n                    <iframe className='frame' id={device.id} url={linkAddress} src={linkAddress}\r\n                    title=\"\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    allowFullScreen\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                    frameBorder=\"0\"\r\n                    /> \r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <span>NO LINK</span>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './device-list-item.styles.scss'\r\n\r\nconst DeviceListItem = ({device, clickHandler}) => {\r\n    let mainDisplayText = `Device`;\r\n    if(device.displayName){\r\n        mainDisplayText = device.displayName;\r\n    } else if(device.id){\r\n        mainDisplayText = device.id;\r\n    }\r\n\r\n    const internalClickHandler = () =>\r\n    {\r\n        clickHandler(device.id);\r\n    }\r\n\r\n    return (\r\n        <div className='device-list-item' key={device.id} onClick={internalClickHandler}>\r\n            <h3 className='display-name'>\r\n                {mainDisplayText}\r\n            </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeviceListItem;\r\n","import React from 'react';\r\nimport './form-input.styles.scss';\r\n\r\nconst FormInput = ({handleChange, label, value, ...otherProps}) => (\r\n    <div className='group'>\r\n        <input className='form-input' value={value} onChange={handleChange} {...otherProps}/>\r\n        {label?\r\n        <label className={`${value ? 'shrink' : ''} form-input-label`} >\r\n                {label}\r\n            </label>\r\n        :null}\r\n    </div>\r\n)\r\n\r\nexport default FormInput;","import React, { Component } from 'react'\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport './device-details.styles.scss'\r\n\r\nexport default class DeviceDetails extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            deviceInfo: this.props.device\r\n        }\r\n    }   \r\n\r\n    handleChange = async event =>{\r\n        const {name, value} = event.target;\r\n        const deviceInfoChange = this.state.deviceInfo;\r\n        deviceInfoChange.data[name] = value;\r\n        this.setState({deviceInfo:deviceInfoChange});\r\n    }\r\n\r\n    handleSubmit = async event =>{\r\n        event.preventDefault();\r\n        if (this.props.submitHandler){\r\n            this.props.submitHandler(this.state.deviceInfo);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {linkAddress, displayName} = this.state.deviceInfo.data;\r\n        if(this.state.deviceInfo?.data?.deviceInfo)\r\n        {\r\n            const {vendor, os, osVersion, model} = this.state.deviceInfo.data.deviceInfo;\r\n            return (\r\n                <div className='device-info'>\r\n                    <span className='header'>Device Info:</span>\r\n                    <div className='all-details'>\r\n                        <div className='details-group'>\r\n                            <span className='detailName'>Vendor</span>\r\n                            <span className='detail-value'>{vendor}</span>\r\n                        </div>\r\n                        <div className='details-group'>\r\n                            <span className='detailName'>OS</span>\r\n                            <span className='detail-value'>{os}</span>\r\n                        </div>\r\n                        <div className='details-group'>\r\n                            <span className='detailName'>OS Version</span>\r\n                            <span className='detail-value'>{osVersion}</span>\r\n                        </div>\r\n                        <div className='details-group'>\r\n                            <span className='detailName'>Model</span>\r\n                            <span className='detail-value'>{model}</span>\r\n                        </div>\r\n                    </div>\r\n                    <form className='device-changes' onSubmit={this.handleSubmit}>\r\n                        <FormInput value={displayName} name='displayName' handleChange={this.handleChange} label='Display Name' />\r\n                        <FormInput value={linkAddress} name='linkAddress' handleChange={this.handleChange} label='Link Address' />\r\n                        <CustomButton type='submit'>Submit</CustomButton>\r\n                    </form>\r\n                </div>\r\n            )\r\n        } else return null;\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {getUserDeviceList, getDeviceLink, updateDeviceLinkAddress, updateDeviceDisplayName} from '../../firebase/firebase.functions'\r\nimport {withRouter, Link} from 'react-router-dom'\r\nimport DeviceListItem from '../../components/device-list-item/device-list-item.component';\r\nimport DeviceDetails from '../../components/device-details/device-details.component';\r\nimport device from '../../data/static/device.data';\r\nimport './info-page.styles.scss';\r\n\r\nclass InfoPage extends Component {\r\n\r\n    state = {\r\n        devices: null,\r\n        selectedDevice: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        getUserDeviceList(null).then((val)=>{\r\n            const deviceList = val;\r\n            if(!deviceList){\r\n                this.props.history.push('signin');\r\n            } else {\r\n            this.setState({devices: deviceList});\r\n            }\r\n        });\r\n\r\n        getDeviceLink().then((devdeets)=>{\r\n            this.setState({selectedDevice: devdeets});\r\n        });\r\n\r\n    }\r\n\r\n    onListChange = async (newList) =>{\r\n        if(newList){\r\n        this.setState({devices:newList});}\r\n    }\r\n\r\n    onItemSelected = async (deviceId) => {\r\n        const deviceDetails = await getDeviceLink(null, deviceId);\r\n        this.setState({selectedDevice: deviceDetails});\r\n    }\r\n\r\n    handleInfoChange = async (deviceInfo) => {\r\n        await updateDeviceLinkAddress(deviceInfo.id, deviceInfo.data.linkAddress);\r\n        await updateDeviceDisplayName(deviceInfo.id, deviceInfo.data.displayName);\r\n        getUserDeviceList(null).then((val)=>{\r\n            const deviceList = val;\r\n            if(!deviceList){\r\n                this.props.history.push('signin');\r\n            } else {\r\n            this.setState({devices: deviceList});\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='info-page'>\r\n                <div className='device-list'>\r\n                    <div className='device-list-header'>Device List</div>\r\n                    <div className='all-devices'>\r\n                    {this.state.devices ? this.state.devices.map((device)=>(\r\n                        <DeviceListItem device={device} clickHandler={this.onItemSelected} key={device.id} />\r\n                    )) : null}\r\n                    </div>\r\n                    <div className='link-page'>\r\n                        <Link to='link'>\r\n                        LINK PAGE\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className='details'>\r\n                    {this.state.selectedDevice? \r\n                    <DeviceDetails device={this.state.selectedDevice} submitHandler={this.handleInfoChange} key={this.state.selectedDevice.id} />\r\n                    :null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(InfoPage);","import './App.css';\nimport MainPage from './pages/main-page/main-page.component'\nimport SignInPage from './pages/sign-in-page/sign-in-page.component'\nimport {HashRouter, Route, Switch} from 'react-router-dom'\nimport {deviceDetect} from 'react-device-detect'\nimport { auth } from './firebase/firebase.utils'\nimport { createUserProfileDocument } from './firebase/firebase.functions'\nimport React from 'react'\nimport LinkPage from './pages/link-page/link-page.component';\nimport InfoPage from './pages/info-page/info-page.component';\n\n\nclass App extends React.Component {\n\n  unsubscribeFromAuth = null;\n\n  constructor(){\n    super();\n    this.state = {\n      currentUser: null,\n    }\n  }\n\n  componentDidMount(){\n    const deviceInfo = deviceDetect();\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if(userAuth){\n        const userRef = await createUserProfileDocument(userAuth, deviceInfo);\n        console.log(\"userAuth: \", userAuth);\n        userRef.onSnapshot(snapShot => {\n\n          this.setState({currentUser: \n            {\n              id: snapShot.id,\n              ...snapShot.data\n            },\n            device: deviceInfo\n          }\n          ,()=>(console.log(\"currentUser: \",this.state.currentUser)));\n        });\n      }\n      this.setState({currentUser: userAuth});\n    });\n  }\n  \n  componentWillUnmount(){\n   // this.unsubscribeFromAuth();\n    //auth.signOut();\n  }\n\n\n  render(){\n  return (\n    <div className=\"App\">\n      <HashRouter>\n      <Switch>\n          <Route path='/signin' component={SignInPage} />\n          <Route path='/info' component={InfoPage} />\n          <Route path='/link' component={LinkPage}/>\n          <Route path='/' component={MainPage} />\n        </Switch>\n        </HashRouter>\n    </div>\n  );}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}