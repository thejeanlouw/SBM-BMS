{"version":3,"sources":["components/custom-button/custom-button.component.js","components/main-menu-buttons/main-menu-buttons.component.jsx","pages/main-page/main-page.component.jsx","firebase/firebase.utils.js","data/static/device.data.js","firebase/firebase.functions.js","pages/sign-in-page/sign-in-page.component.jsx","pages/link-page/link-page.component.jsx","components/device-list-item/device-list-item.component.jsx","pages/info-page/info-page.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["CustomButton","children","otherProps","isGoogleSignIn","className","MainMenuButtons","to","MainPage","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","device","a","deviceDetect","dev","ua","getUA","window","navigator","getBattery","battery","bluetooth","getAvailability","Uuid","getUuid","rcc","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","addDeviceToUser","currentUser","userDeviceRef","doc","get","deviceSnapshot","email","ownerId","uid","firstAccessedAt","Date","lastAccessedAt","linkProperties","deviceInfo","exists","set","internalLink","linkAddress","console","log","message","update","getDeviceLink","changeHandler","onSnapshot","includeMetadataChanges","data","dat","id","ref","getUserDeviceList","deviceListRef","collection","where","snapShot","deviceList","empty","docs","forEach","push","change","createUserProfileDocument","userAuth","additionalData","userRef","displayName","phoneNumber","createdAt","signedAgreements","onboardedComplete","SignInPage","handleYes","then","val","user","props","history","handleNo","onClick","this","React","Component","withRouter","LinkPage","getLinkFromFireStore","getChangeFromFireStore","deviceData","setState","componentDidMount","state","url","src","title","width","height","allowFullScreen","allow","frameBorder","DeviceListItem","InfoPage","devices","onListChange","newList","map","App","unsubscribeFromAuth","onAuthStateChanged","signOut","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6370c11.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './custom-button.styles.scss';\n\nconst CustomButton = ({children, isGoogleSignIn, ...otherProps}) => (\n  <button className={`${children} custom-button`} {...otherProps}>\n    {children}\n  </button>\n);\n\nexport default CustomButton;\n","import React from 'react'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport './main-menu-buttons.styles.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function MainMenuButtons() {\r\n    return (\r\n        <div className='main-menu-buttons'>\r\n            <Link to='/'>\r\n                <CustomButton>Welcome</CustomButton>\r\n            </Link>\r\n            <Link to='showcase'>\r\n                <CustomButton>Showcase</CustomButton>\r\n            </Link>\r\n            <Link to='sign-in'>\r\n                <CustomButton>Sign-In</CustomButton>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport MainMenuButtons from '../../components/main-menu-buttons/main-menu-buttons.component'\r\nimport './main-page.styles.css'\r\n\r\nexport default function MainPage() {\r\n    return (\r\n        <div className='main-page'>\r\n            <span className='header'>SMB | BMS</span>\r\n            <MainMenuButtons />\r\n        </div>\r\n    )\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyA8CE6cmO3e84VpfChKyM44KDe28bn5OMk\",\r\n    authDomain: \"parangelmata.firebaseapp.com\",\r\n    databaseURL: \"https://parangelmata.firebaseio.com\",\r\n    projectId: \"parangelmata\",\r\n    storageBucket: \"parangelmata.appspot.com\",\r\n    messagingSenderId: \"824823048409\",\r\n    appId: \"1:824823048409:web:3e241472d3babc2c3576c8\",\r\n    measurementId: \"G-09Q8GHTRFZ\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport default firebase;","import rcc, { deviceDetect, getUA} from 'react-device-detect'\r\n\r\nimport getUuid from 'uuid-by-string'\r\n\r\nconst device = async () => {\r\n    var dev = await deviceDetect();\r\n    var ua = getUA;\r\n    dev.battery = await window.navigator.getBattery();\r\n    dev.bluetooth = await window.navigator.bluetooth.getAvailability();\r\n    dev.Uuid = getUuid(ua);\r\n    return {...dev,...rcc};\r\n}\r\n\r\n\r\n\r\nexport default device;","import firebase, {auth, firestore} from './firebase.utils'\r\nimport device from '../data/static/device.data'\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport const addDeviceToUser = async () => {\r\n\r\n    const dev = await device();\r\n    const currentUser = auth.currentUser;\r\n    if(!currentUser) return;\r\n    if(dev==null || dev.ua == null) return;\r\n    \r\n    debugger;\r\n    const userDeviceRef = firestore.doc(`smb-devices/${dev.Uuid}`);\r\n    const deviceSnapshot = await userDeviceRef.get();\r\n\r\n    const {email} = currentUser;\r\n    const ownerId = currentUser.uid;\r\n    const firstAccessedAt = new Date();\r\n    const lastAccessedAt = new Date(); \r\n    const internalLink = false;\r\n    const linkAddress = 'https://www.parangelmata.com/plans-pricing';\r\n    const linkProperties = {};\r\n    const deviceInfo = dev;\r\n\r\n    if(!deviceSnapshot.exists)\r\n    {\r\n        try {\r\n            await userDeviceRef.set({\r\n                email,\r\n                ownerId,\r\n                firstAccessedAt,\r\n                internalLink,\r\n                linkAddress,\r\n                linkProperties,\r\n                deviceInfo\r\n            });\r\n        } catch (error) {\r\n            console.log('ERROR CREATING DEVICE', error.message);\r\n        } \r\n    } else {\r\n        try {\r\n            await userDeviceRef.update({\r\n                email,\r\n                ownerId,\r\n                lastAccessedAt,\r\n                deviceInfo\r\n            });\r\n        } catch (error) {\r\n            console.log('ERROR UPDATING DEVICE', error.message);\r\n        } \r\n    }\r\n    return userDeviceRef; \r\n}\r\n\r\nexport const getDeviceLink = async (changeHandler) =>{\r\n    const dev = await device();\r\n    if(!dev.Uuid) return;\r\n    const userDeviceRef = firestore.doc(`smb-devices/${dev.Uuid}`);\r\n\r\n    const deviceSnapshot = await userDeviceRef.get();\r\n\r\n    if(deviceSnapshot.exists){\r\n        if(changeHandler){\r\n            userDeviceRef.onSnapshot({includeMetadataChanges: true},changeHandler)\r\n        }\r\n        const dat = await deviceSnapshot.data();\r\n        return {\r\n            id: dev.Uuid,\r\n            data: dat,\r\n            ref: userDeviceRef}\r\n    } else\r\n    return {\r\n        data: {\r\n        id: 0,\r\n        linkAddress: 'https://thejeanlouw.github.io/super-media-bros',\r\n        linkProperties: {}\r\n        }\r\n    };\r\n}\r\n\r\nexport const getUserDeviceList = async (changeHandler) => {\r\n    const currentUser = auth.currentUser;\r\n    const myAuth = auth;\r\n    debugger;\r\n    if(!currentUser) return null;\r\n    debugger;\r\n    const deviceListRef = firestore.collection('smb-devices').where('ownerId','==', currentUser.uid);\r\n    const snapShot = await deviceListRef.get();\r\n    const deviceList = [];\r\n    if(!snapShot.empty)\r\n    {\r\n        snapShot.docs.forEach((doc)=>{\r\n            deviceList.push({id:doc.id,uid:doc.uid,...doc.data()});\r\n        });\r\n        if(changeHandler)\r\n        {\r\n            deviceListRef.onSnapshot((change)=>{\r\n                const changeList = [];\r\n                change.docs.forEach((doc)=>{\r\n                    deviceList.push({id:doc.id,uid:doc.uid,...doc.data()});\r\n                });\r\n                changeHandler(changeList);\r\n            })\r\n        }\r\n    }\r\n    return deviceList;\r\n}\r\n\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if(!userAuth) return;                                           \r\n    const userRef = firestore.doc(`smb-users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get();\r\n    \r\n    if(!snapShot.exists){\r\n        const { displayName, email, phoneNumber} = userAuth;\r\n        const createdAt= new Date();\r\n        const signedAgreements = false;\r\n        const onboardedComplete = false;\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                signedAgreements,\r\n                onboardedComplete,\r\n                ...additionalData\r\n            });\r\n        } catch (error) {\r\n            console.log('ERROR CREATING USER', error.message);\r\n        }\r\n    }\r\n\r\n    await addDeviceToUser();\r\n    return userRef;\r\n\r\n}","import React from 'react'\r\nimport CustomButton from '../../components/custom-button/custom-button.component'\r\nimport './sign-in-page.styles.scss'\r\nimport {signInWithGoogle} from '../../firebase/firebase.functions'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass SignInPage extends React.Component {\r\n\r\n    handleYes = async () =>{\r\n        signInWithGoogle().then((val)=>{\r\n            if(val.user){\r\n                this.props.history.push('/info-page');\r\n            } else this.props.history.push('/link-page')})\r\n        \r\n    }\r\n\r\n    handleNo = () => {\r\n        this.props.history.push('/link-page')\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <div className='sign-in-page'>\r\n            <span className='main-text'>IS THIS THE MANAGING DEVICE?</span>\r\n            <div className='yes-or-no-buttons'>\r\n                <CustomButton onClick={this.handleYes}>Yes</CustomButton>\r\n                <CustomButton onClick={this.handleNo}>No</CustomButton>\r\n            </div>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default withRouter(SignInPage);","import React from 'react'\r\nimport {getDeviceLink} from '../../firebase/firebase.functions'\r\nimport './link-page.styles.scss'\r\n\r\nexport default class LinkPage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            device: null\r\n        }\r\n    }\r\n\r\n    getLinkFromFireStore = async () =>\r\n    {\r\n        const deviceData = await getDeviceLink(this.getChangeFromFireStore);\r\n        this.setState({device: deviceData});\r\n    }\r\n\r\n    getChangeFromFireStore = async (change) =>\r\n    {\r\n        this.setState({device: {\r\n            data: change.data(),\r\n            id: change.id}});\r\n    }\r\n\r\n    componentDidMount= async () =>{\r\n        this.getLinkFromFireStore();\r\n    }\r\n\r\n    render(){\r\n        const {device} = this.state;\r\n        let linkAddress = '';\r\n        if((device!=null) && (device.data!=null) && (device.data.linkAddress!=null)) {\r\n            linkAddress = device.data.linkAddress;\r\n            console.log(\"link address: \", linkAddress, `${linkAddress}`)\r\n            return (\r\n                <div className='iframe'>\r\n                    <iframe className='frame' id={device.id} url={linkAddress} src={linkAddress}\r\n                    title=\"\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    allowFullScreen\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                    frameBorder=\"0\"\r\n                    /> \r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <span>NO LINK</span>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './device-list-item.styles.scss'\r\n\r\nconst DeviceListItem = ({device}) => {\r\n\r\n    return (\r\n        <div className='device-list-item' key={device.id}>\r\n            <h2 className='display-name'>\r\n            {device.displayName ? device.displayName : device.id }\r\n            </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeviceListItem;\r\n","import React, { Component } from 'react'\r\nimport {getUserDeviceList} from '../../firebase/firebase.functions'\r\nimport {withRouter} from 'react-router-dom'\r\nimport DeviceListItem from '../../components/device-list-item/device-list-item.component';\r\n\r\nclass InfoPage extends Component {\r\n\r\n    state = {\r\n        devices: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        getUserDeviceList(null).then((val)=>{\r\n            const deviceList = val;\r\n            if(!deviceList){\r\n                this.props.history.push('sign-in');\r\n            } else {\r\n            this.setState({devices: deviceList});\r\n            }\r\n        });\r\n    }\r\n\r\n    onListChange = async (newList) =>{\r\n        debugger;\r\n        if(newList){\r\n        this.setState({devices:newList});}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='info-page'>\r\n                <div className='device-list'>\r\n                    {this.state.devices ? this.state.devices.map((device)=>(\r\n                        <DeviceListItem device={device}/>\r\n                    )) : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(InfoPage);","import './App.css';\nimport MainPage from './pages/main-page/main-page.component'\nimport SignInPage from './pages/sign-in-page/sign-in-page.component'\nimport {HashRouter, Route, Switch} from 'react-router-dom'\nimport {deviceDetect} from 'react-device-detect'\nimport { auth } from './firebase/firebase.utils'\nimport { createUserProfileDocument } from './firebase/firebase.functions'\nimport React from 'react'\nimport LinkPage from './pages/link-page/link-page.component';\nimport InfoPage from './pages/info-page/info-page.component';\n\n\nclass App extends React.Component {\n\n  unsubscribeFromAuth = null;\n\n  constructor(){\n    super();\n    this.state = {\n      currentUser: null,\n    }\n  }\n\n  componentDidMount(){\n    const deviceInfo = deviceDetect();\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if(userAuth){\n        const userRef = await createUserProfileDocument(userAuth, deviceInfo);\n        console.log(\"userAuth: \", userAuth);\n        userRef.onSnapshot(snapShot => {\n\n          this.setState({currentUser: \n            {\n              id: snapShot.id,\n              ...snapShot.data\n            },\n            device: deviceInfo\n          }\n          ,()=>(console.log(\"currentUser: \",this.state.currentUser)));\n        });\n      }\n      this.setState({currentUser: userAuth});\n    });\n  }\n  \n  componentWillUnmount(){\n    this.unsubscribeFromAuth();\n    auth.signOut();\n  }\n\n\n  render(){\n  return (\n    <div className=\"App\">\n      <HashRouter>\n      <Switch>\n          <Route path='/sign-in' component={SignInPage} />\n          <Route path='/info-page' component={InfoPage} />\n          <Route path='/link-page' component={LinkPage}/>\n          <Route path='/' component={MainPage} />\n        </Switch>\n        </HashRouter>\n    </div>\n  );}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}