[{"C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\App.js":"1","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\reportWebVitals.js":"2","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\index.js":"3","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\firebase\\firebase.utils.js":"4","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\firebase\\firebase.functions.js":"5","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\pages\\main-page\\main-page.component.jsx":"6","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\pages\\link-page\\link-page.component.jsx":"7","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\pages\\sign-in-page\\sign-in-page.component.jsx":"8","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\components\\custom-button\\custom-button.component.js":"9","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\components\\main-menu-buttons\\main-menu-buttons.component.jsx":"10","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\firebase\\firebase.hooks.js":"11","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\data\\static\\device.data.js":"12","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\pages\\info-page\\info-page.component.jsx":"13","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\components\\device-list-item\\device-list-item.component.jsx":"14","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\components\\form-input\\form-input.component.jsx":"15","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\components\\device-details\\device-details.component.jsx":"16"},{"size":1791,"mtime":1612270164354,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1611822907733,"results":"19","hashOfConfig":"18"},{"size":590,"mtime":1612040350700,"results":"20","hashOfConfig":"18"},{"size":636,"mtime":1612176584423,"results":"21","hashOfConfig":"18"},{"size":5041,"mtime":1612267740000,"results":"22","hashOfConfig":"18"},{"size":359,"mtime":1612039483775,"results":"23","hashOfConfig":"18"},{"size":1751,"mtime":1612269123914,"results":"24","hashOfConfig":"18"},{"size":1037,"mtime":1612260432981,"results":"25","hashOfConfig":"18"},{"size":275,"mtime":1612038662638,"results":"26","hashOfConfig":"18"},{"size":623,"mtime":1612260421410,"results":"27","hashOfConfig":"18"},{"size":524,"mtime":1612172330798,"results":"28","hashOfConfig":"18"},{"size":872,"mtime":1612270698882,"results":"29","hashOfConfig":"18"},{"size":2895,"mtime":1612261632387,"results":"30","hashOfConfig":"18"},{"size":663,"mtime":1612256284236,"results":"31","hashOfConfig":"18"},{"size":456,"mtime":1612257874069,"results":"32","hashOfConfig":"18"},{"size":2779,"mtime":1612262438660,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"1jdhk4m",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\App.js",["73"],"import './App.css';\nimport MainPage from './pages/main-page/main-page.component'\nimport SignInPage from './pages/sign-in-page/sign-in-page.component'\nimport {HashRouter, Route, Switch} from 'react-router-dom'\nimport { auth } from './firebase/firebase.utils'\nimport { createUserProfileDocument, addDeviceToUser } from './firebase/firebase.functions'\nimport React from 'react'\nimport LinkPage from './pages/link-page/link-page.component';\nimport InfoPage from './pages/info-page/info-page.component';\n\n\nclass App extends React.Component {\n\n  unsubscribeFromAuth = null;\n\n  constructor(){\n    super();\n    this.state = {\n      currentUser: null,\n    }\n  }\n\n  componentDidMount(){\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if(userAuth){\n        debugger;\n        console.log(\"userAuth: \", userAuth);\n        const userRef = await createUserProfileDocument(userAuth);\n        const deviceRef = await addDeviceToUser();\n        userRef.onSnapshot(snapShot => {\n\n          this.setState({currentUser: \n            {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          }\n          ,()=>(console.log(\"currentUser: \",this.state.currentUser)));\n        });\n      }\n      this.setState({currentUser: userAuth});\n    });\n  }\n  \n  componentWillUnmount(){\n    this.setState({currentUser: null})\n    this.unsubscribeFromAuth();\n    auth.signOut();\n  }\n\n\n  render(){\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route path='/signin' component={SignInPage} />\n          <Route path='/info' component={InfoPage} />\n          <Route path='/link' component={LinkPage}/>\n          <Route path='/' component={MainPage} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );}\n}\n\nexport default App;\n","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\reportWebVitals.js",[],["74","75"],"C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\index.js",[],["76","77"],"C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\firebase\\firebase.utils.js",[],"C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\firebase\\firebase.functions.js",["78","79"],"import firebase, {auth, firestore} from './firebase.utils'\r\nimport device from '../data/static/device.data'\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport const addDeviceToUser = async () => {\r\n    debugger;\r\n    const dev = await device();\r\n    if(dev.id) dev.Uuid=dev.id;\r\n    const currentUser = auth.currentUser;\r\n    if(!currentUser) return;\r\n    if(dev==null || dev.ua == null) return;\r\n    \r\n    const userDeviceRef = firestore.doc(`smb-devices/${dev.Uuid}`);\r\n    const deviceSnapshot = await userDeviceRef.get();\r\n\r\n    const {email} = currentUser;\r\n    const ownerId = currentUser.uid;\r\n    const firstAccessedAt = new Date();\r\n    const lastAccessedAt = new Date(); \r\n    const internalLink = false;\r\n    const linkAddress = 'https://www.parangelmata.com/plans-pricing';\r\n    const linkProperties = {};\r\n    const deviceInfo = dev;\r\n\r\n    if(!deviceSnapshot.exists)\r\n    {\r\n        try {\r\n            await userDeviceRef.set({\r\n                email,\r\n                ownerId,\r\n                firstAccessedAt,\r\n                internalLink,\r\n                linkAddress,\r\n                linkProperties,\r\n                deviceInfo\r\n            });\r\n        } catch (error) {\r\n            console.log('ERROR CREATING DEVICE', error.message);\r\n        } \r\n    } else {\r\n        try {\r\n            await userDeviceRef.update({\r\n                email,\r\n                ownerId,\r\n                lastAccessedAt,\r\n                deviceInfo\r\n            });\r\n        } catch (error) {\r\n            console.log('ERROR UPDATING DEVICE', error.message);\r\n        } \r\n    }\r\n    return userDeviceRef; \r\n}\r\n\r\nexport const updateDeviceLinkAddress = async (deviceId, linkAddress) => {\r\n    if(!deviceId) return;\r\n    const userDeviceRef = firestore.doc(`smb-devices/${deviceId}`);\r\n    const deviceSnapshot = await userDeviceRef.get();\r\n\r\n    if(deviceSnapshot.exists){\r\n        userDeviceRef.update({\r\n            'linkAddress': linkAddress \r\n        });\r\n    }\r\n}\r\n\r\nexport const updateDeviceDisplayName = async (deviceId, linkAddress) => {\r\n    if(!deviceId) return;\r\n    const userDeviceRef = firestore.doc(`smb-devices/${deviceId}`);\r\n    const deviceSnapshot = await userDeviceRef.get();\r\n\r\n    if(deviceSnapshot.exists){\r\n        userDeviceRef.update({\r\n            'displayName': linkAddress \r\n        });\r\n    }\r\n}\r\n\r\nexport const getDeviceLink = async (changeHandler, deviceId) =>{\r\n    debugger;\r\n    const dev = await device();\r\n    if(dev.id) dev.Uuid= dev.id;\r\n    if(!dev.Uuid) return;\r\n    if(deviceId!=null){\r\n        dev.Uuid=deviceId\r\n    };\r\n\r\n    const userDeviceRef = firestore.doc(`smb-devices/${dev.Uuid}`);\r\n\r\n    const deviceSnapshot = await userDeviceRef.get();\r\n\r\n    if(deviceSnapshot.exists){\r\n        if(changeHandler){\r\n            userDeviceRef.onSnapshot({includeMetadataChanges: true},changeHandler)\r\n        }\r\n        const dat = await deviceSnapshot.data();\r\n        return {\r\n            id: dev.Uuid,\r\n            data: dat,\r\n            ref: userDeviceRef}\r\n    } else\r\n    return {\r\n        data: {\r\n        id: 0,\r\n        linkAddress: 'https://thejeanlouw.github.io/super-media-bros',\r\n        linkProperties: {}\r\n        }\r\n    };\r\n}\r\n\r\nexport const getUserDeviceList = async (changeHandler) => {\r\n    const currentUser = auth.currentUser;\r\n    const myAuth = auth;\r\n    if(!currentUser) return null;\r\n    const deviceListRef = firestore.collection('smb-devices').where('ownerId','==', currentUser.uid);\r\n    const snapShot = await deviceListRef.get();\r\n    const deviceList = [];\r\n    debugger;\r\n    if(!snapShot.empty)\r\n    {\r\n        snapShot.docs.forEach((doc)=>{\r\n            deviceList.push({id:doc.id,uid:doc.uid,...doc.data()});\r\n        });\r\n        if(changeHandler)\r\n        {\r\n            deviceListRef.onSnapshot((change)=>{\r\n                const changeList = [];\r\n                change.docs.forEach((doc)=>{\r\n                    deviceList.push({id:doc.id,uid:doc.uid,...doc.data()});\r\n                });\r\n                changeHandler(changeList);\r\n            })\r\n        }\r\n    }\r\n    return deviceList;\r\n}\r\n\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if(!userAuth) return;              \r\n    debugger                             \r\n    const userRef = firestore.doc(`smb-users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get();\r\n    if(!snapShot.exists){\r\n        const { displayName, email, phoneNumber} = userAuth;\r\n        const createdAt= new Date();\r\n        const signedAgreements = false;\r\n        const onboardedComplete = false;\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                signedAgreements,\r\n                onboardedComplete,\r\n                ...additionalData\r\n            });\r\n        } catch (error) {\r\n            console.log('ERROR CREATING USER', error.message);\r\n        }\r\n    }\r\n    return userRef;\r\n}","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\pages\\main-page\\main-page.component.jsx",[],"C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\pages\\link-page\\link-page.component.jsx",["80"],"import React from 'react'\r\nimport {getDeviceLink} from '../../firebase/firebase.functions'\r\nimport './link-page.styles.scss'\r\n\r\nexport default class LinkPage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            device: null\r\n        }\r\n    }\r\n\r\n    getLinkFromFireStore = async () =>\r\n    {\r\n        const deviceData = await getDeviceLink(this.getChangeFromFireStore);\r\n        debugger;\r\n        this.setState({device: deviceData});\r\n    }\r\n\r\n    getChangeFromFireStore = async (change) =>\r\n    {\r\n        debugger;\r\n        this.setState({device: {\r\n            data: change.data(),\r\n            id: change.id}});\r\n    }\r\n\r\n    componentDidMount= async () =>{\r\n        this.getLinkFromFireStore();\r\n    }\r\n\r\n    render(){\r\n        const {device} = this.state;\r\n        let linkAddress = '';\r\n        if((device!=null) && (device.data!=null) && (device.data.linkAddress!=null)) {\r\n            linkAddress = device.data.linkAddress;\r\n            console.log(\"link address: \", linkAddress, `${linkAddress}`)\r\n            return (\r\n                <div className='iframe'>\r\n                    <iframe className='frame' id={device.id} url={linkAddress} src={linkAddress}\r\n                    title=\"\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    allowFullScreen\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                    frameBorder=\"0\"\r\n                    /> \r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <span>NO LINK</span>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\pages\\sign-in-page\\sign-in-page.component.jsx",[],"C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\components\\custom-button\\custom-button.component.js",["81"],"C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\components\\main-menu-buttons\\main-menu-buttons.component.jsx",[],"C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\firebase\\firebase.hooks.js",["82","83"],"C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\data\\static\\device.data.js",[],"C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\pages\\info-page\\info-page.component.jsx",["84"],"import React, { Component } from 'react'\r\nimport {getUserDeviceList, getDeviceLink, updateDeviceLinkAddress, updateDeviceDisplayName} from '../../firebase/firebase.functions'\r\nimport {withRouter, Link} from 'react-router-dom'\r\nimport DeviceListItem from '../../components/device-list-item/device-list-item.component';\r\nimport DeviceDetails from '../../components/device-details/device-details.component';\r\nimport device from '../../data/static/device.data';\r\nimport './info-page.styles.scss';\r\n\r\nclass InfoPage extends Component {\r\n\r\n    state = {\r\n        devices: null,\r\n        selectedDevice: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        getUserDeviceList(null).then((val)=>{\r\n            const deviceList = val;\r\n            if(!deviceList){\r\n                this.props.history.push('signin');\r\n            } else {\r\n            this.setState({devices: deviceList});\r\n            }\r\n        });\r\n\r\n        getDeviceLink().then((devdeets)=>{\r\n            this.setState({selectedDevice: devdeets});\r\n        });\r\n\r\n    }\r\n\r\n    onListChange = async (newList) =>{\r\n        if(newList){\r\n        this.setState({devices:newList});}\r\n    }\r\n\r\n    onItemSelected = async (deviceId) => {\r\n        const deviceDetails = await getDeviceLink(null, deviceId);\r\n        this.setState({selectedDevice: deviceDetails});\r\n    }\r\n\r\n    handleInfoChange = async (deviceInfo) => {\r\n        await updateDeviceLinkAddress(deviceInfo.id, deviceInfo.data.linkAddress);\r\n        await updateDeviceDisplayName(deviceInfo.id, deviceInfo.data.displayName);\r\n        getUserDeviceList(null).then((val)=>{\r\n            const deviceList = val;\r\n            if(!deviceList){\r\n                this.props.history.push('signin');\r\n            } else {\r\n            this.setState({devices: deviceList});\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='info-page'>\r\n                <div className='device-list'>\r\n                    <div className='device-list-header'>Device List</div>\r\n                    <div className='all-devices'>\r\n                    {this.state.devices ? this.state.devices.map((device)=>(\r\n                        <DeviceListItem device={device} clickHandler={this.onItemSelected} key={device.id} />\r\n                    )) : null}\r\n                    </div>\r\n                    <div className='link-page'>\r\n                        <Link to='link'>\r\n                        LINK PAGE\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className='details'>\r\n                    {this.state.selectedDevice? \r\n                    <DeviceDetails device={this.state.selectedDevice} submitHandler={this.handleInfoChange} key={this.state.selectedDevice.id} />\r\n                    :null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(InfoPage);","C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\components\\device-list-item\\device-list-item.component.jsx",[],["85","86"],"C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\components\\form-input\\form-input.component.jsx",[],"C:\\Work\\PM\\SuperMediaBros\\SBM-BMS\\src\\components\\device-details\\device-details.component.jsx",[],{"ruleId":"87","severity":1,"message":"88","line":29,"column":15,"nodeType":"89","messageId":"90","endLine":29,"endColumn":24},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"91","replacedBy":"95"},{"ruleId":"93","replacedBy":"96"},{"ruleId":"87","severity":1,"message":"97","line":116,"column":11,"nodeType":"89","messageId":"90","endLine":116,"endColumn":17},{"ruleId":"87","severity":1,"message":"98","line":148,"column":37,"nodeType":"89","messageId":"90","endLine":148,"endColumn":48},{"ruleId":"99","severity":1,"message":"100","line":41,"column":21,"nodeType":"101","endLine":48,"endColumn":23},{"ruleId":"87","severity":1,"message":"102","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":14},{"ruleId":"87","severity":1,"message":"103","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":16},{"ruleId":"87","severity":1,"message":"104","line":2,"column":19,"nodeType":"89","messageId":"90","endLine":2,"endColumn":23},{"ruleId":"87","severity":1,"message":"105","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":14},{"ruleId":"91","replacedBy":"106"},{"ruleId":"93","replacedBy":"107"},"no-unused-vars","'deviceRef' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],"'myAuth' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'styles' is defined but never used.","'firebase' is defined but never used.","'auth' is defined but never used.","'device' is defined but never used.",["108"],["109"],"no-global-assign","no-unsafe-negation"]